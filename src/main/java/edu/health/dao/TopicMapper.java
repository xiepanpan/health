package edu.health.dao;

import edu.health.model.Topic;
import edu.health.model.TopicWithUser;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TopicMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@Delete({ "delete from topic", "where article_id = #{articleId,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer articleId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@Insert({ "insert into topic (article_id, title, ", "user_id, create_date, ", "content)",
			"values (#{articleId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
			"#{userId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, ", "#{content,jdbcType=LONGVARCHAR})" })
	int insert(Topic record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@InsertProvider(type = TopicSqlProvider.class, method = "insertSelective")
	int insertSelective(Topic record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@Select({ "select", "article_id, title, user_id, create_date, content", "from topic",
			"where article_id = #{articleId,jdbcType=INTEGER}" })
	@Results({ @Result(column = "article_id", property = "articleId", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "create_date", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "content", property = "content", jdbcType = JdbcType.LONGVARCHAR) })
	Topic selectByPrimaryKey(Integer articleId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@UpdateProvider(type = TopicSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(Topic record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@Update({ "update topic", "set title = #{title,jdbcType=VARCHAR},", "user_id = #{userId,jdbcType=INTEGER},",
			"create_date = #{createDate,jdbcType=TIMESTAMP},", "content = #{content,jdbcType=LONGVARCHAR}",
			"where article_id = #{articleId,jdbcType=INTEGER}" })
	int updateByPrimaryKeyWithBLOBs(Topic record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table topic
	 * @mbg.generated  Tue Jan 14 13:01:07 CST 2020
	 */
	@Update({ "update topic", "set title = #{title,jdbcType=VARCHAR},", "user_id = #{userId,jdbcType=INTEGER},",
			"create_date = #{createDate,jdbcType=TIMESTAMP}", "where article_id = #{articleId,jdbcType=INTEGER}" })
	int updateByPrimaryKey(Topic record);
	
	
	@Select({
		"<script>",
		"select topic.*,users.login_name,users.avatar from topic",
		"left join users on users.user_id=topic.user_id",
		"where 1=1",
		"<if test='userId != null'>",
		"and topic.user_id = #{userId,jdbcType=INTEGER}",
		"</if>",
		"<if test='title != null'>",
		"and topic.title = #{title,jdbcType=INTEGER}",
		"</if>",
		"<if test='order != null'>",
		"order by ${order} ${orderType}",
		"</if>",
		"limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}",
		"</script>"
	})
	@Results({ 
		@Result(column = "article_id", property = "articleId", jdbcType = JdbcType.INTEGER, id = true),
		@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
		@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
		@Result(column = "create_date", property = "createDate", jdbcType = JdbcType.TIMESTAMP),
		@Result(column = "content", property = "content", jdbcType = JdbcType.LONGVARCHAR),
		@Result(column = "login_name", property = "loginName", jdbcType = JdbcType.VARCHAR),
		@Result(column = "avatar", property = "avatar", jdbcType = JdbcType.VARCHAR),
	
	})
	List<TopicWithUser> queryPage(@Param("title")String title,@Param("userId") Integer userId,@Param("order") String order,@Param("orderType") String orderType,@Param("start") int start,
			@Param("size")Integer size);
	
	@Select({
		"<script>",
		"select count(*) from topic",
		"<if test='userId != null'>",
		"and topic.user_id = #{userId,jdbcType=INTEGER}",
		"</if>",
		"<if test='title != null'>",
		"and topic.title = #{title,jdbcType=INTEGER}",
		"</if>",
		"</script>"
	})
	Integer count(String title, Integer userId);
}